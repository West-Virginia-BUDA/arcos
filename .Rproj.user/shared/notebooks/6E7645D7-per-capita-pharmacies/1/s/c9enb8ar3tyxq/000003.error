{"frames":[{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"wv_joined %>% select(Pharmacy = buyer_name, City = buyer_city, \n    County = buyer_county, `County population` = population, \n    Pills = total_dosage_unit, `Pills per person` = per_person) %>% \n    mutate(`Pills per person` = round(`Pills per person`, 1))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"withVisible(eval(quote(`_fseq`(`_lhs`)), env, env))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"eval(quote(`_fseq`(`_lhs`)), env, env)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"`_fseq`(`_lhs`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"freduce(value, `_function_list`)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"function_list[[i]](value)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"select(., Pharmacy = buyer_name, City = buyer_city, County = buyer_county, \n    `County population` = population, Pills = total_dosage_unit, \n    `Pills per person` = per_person)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"select.data.frame(., Pharmacy = buyer_name, City = buyer_city, \n    County = buyer_county, `County population` = population, \n    Pills = total_dosage_unit, `Pills per person` = per_person)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"tidyselect::vars_select(tbl_vars(.data), !!!enquos(...))","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"bad_calls(bad, \"must evaluate to { singular(.vars) } positions or names, \\\\\\n       not { first_type }\")","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"glubort(fmt_calls(calls), ..., .envir = .envir)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":".abort(text)","line_number":0},{"character_number":0,"end_character_number":0,"end_line_number":0,"file":"","func":"stop(cnd)","line_number":0}],"message":"Error: `population` must evaluate to column positions or names, not a list\n[90mCall `rlang::last_error()` to see a backtrace[39m\n"}